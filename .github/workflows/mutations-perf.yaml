name: mutations-perf

on:
  workflow_dispatch:
    inputs:
      test:
        description: 'Test to run'
        required: true
        default: 'test'

jobs:
  run-perf:
    name: Python perf tests
    needs:
      - build-container
    runs-on: [self-hosted, runner]
    container: us-east4-docker.pkg.dev/weave-support-367421/weave-images/weave-test:${{ github.sha }}
    services:
      wandbservice:
        image: us-central1-docker.pkg.dev/wandb-production/images/local-testcontainer:master
        credentials:
          username: _json_key
          password: ${{ secrets.gcp_wb_sa_key }}
        env:
          CI: 1
          WANDB_ENABLE_TEST_CONTAINER: true
        ports:
          - "8080:8080"
          - "8083:8083"
          - "9015:9015"
        options: --health-cmd "curl --fail http://localhost:8080/healthz || exit 1" --health-interval=5s --health-timeout=3s
    steps:
      # - uses: datadog/agent-github-action@v1.3
      #   with:
      #     api_key: ${{ secrets.DD_API_KEY }}
      - uses: actions/checkout@v2
      - name: Verify wandb server is running
        run: curl -s http://wandbservice:8080/healthz
      - name: Run tests
        env:
          DD_SERVICE: weave-python
          DD_ENV: ci
        run: |
          set -euo pipefail
          WB_SERVER_HOST=http://wandbservice WEAVE_SERVER_DISABLE_ECOSYSTEM=1 source /root/venv/bin/activate
          pip install -e .
          pip install -r perf/requirements.txt
          python -m cProfile -o /tmp/load_test.prof perf/webgpt_data_load_test.py
      - name: Adding markdown
        run: cat /tmp/output.md >> $GITHUB_STEP_SUMMARY
      - name: Create Flamegraph
        run: flameprof /tmp/cprof.out > /tmp/cprof.svg
      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: cprof.svg
          path: /tmp/cprof.svg


  build-container:
    name: Build test container
    runs-on: [self-hosted, builder]
    env:
      REGISTRY: us-east4-docker.pkg.dev/weave-support-367421/weave-images
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          registry: us-east4-docker.pkg.dev
          username: _json_key
          password: ${{ secrets.gcp_sa_key }}

      # this script is hardcoded to build for linux/amd64
      - name: Prune docker cache
        run: docker system prune -f
      - name: Build unit test image
        run: python3 docker_build.py build_deps weave-test builder . Dockerfile.test
      - name: Build integration test image
        run: python3 docker_build.py build weave-integration-test . Dockerfile.test
